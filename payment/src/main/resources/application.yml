spring:
  config:
    activate:
      on-profile: default
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9090/realms/master/protocol/openid-connect/certs
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: payment
#<<< EDA / Topic Name
          destination: complainment
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: complainment
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

api:
  url:
    user: localhost:8084


server:
  port: 8083

---

feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 3000  # 연결 timeout
        readTimeout: 610      # 응답 대기 timeout
        retryer:
          period: 2000        # 재시도 주기 
          maxPeriod: 5000     # 최대 재시도 주기 
          maxAttempts: 2      # 최대 재시도 횟수 
hystrix:
  command:
    # 전역설정
    default:
      execution.isolation.thread.timeoutInMilliseconds: 610 # 읽기 타임아웃 (밀리초 단위)

spring:
  config:
    activate:
      on-profile: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: payment
          destination: complainment
          contentType: application/json
        event-out:
          destination: complainment
          contentType: application/json

api:
  url:
    user: user:8080


